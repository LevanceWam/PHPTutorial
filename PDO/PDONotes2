# PDO Course part 2

So for this part of the course I am solely focusing on 
the PDO objectand writing down what it does and 
how i need to use it.

In the live coding exercise we used SQLite and we didn't need to 
create variables for the host and etc like we aare seeing now so we will
go and learn about pdo and sqlite at a letter time 
for now lets focus on learning PDO

## PDO
First we are going to want to create a 
PDO instance here we call the 'new PDO()' function
to create a new instance of PDO.

* This is needed to create the connection to the database 

## Making Queries

As far as making queries there are 2 ways to handle this 
    1. *Query method
        This method is fine if we are not using any kind of 
        variables or any kind of user input 

    2. *Prepared statement
        this is for if we are using user input from forms and 
        we need to insert that input 

## PDOquery

so we are going to make a variable stmt
for statement and take the pdo instance and call the Query
method 

inside of this method we are going to write a simple Query
the stmt variable is now storing those result 

now we are going to want to loop through the results and then print them to the screen
we are going to use a while loop for this 

so in the condition statement we are going to
create another variable called rows and then 
store the result of (stmt->fetch()) 

## fetch
with this fetch method we basically tell object how
we want it formatted 
we have some options to choose from 
    - associative array (this is what we are going to do)
    - object (FETCH_OBJ)
    - regular array 
    - key value pairs 

associative arrays and objects are the most common 

## setAttribute 
now if we dont always want to specify which 
format we want to use we can always take this approach 

so lets say we wanted to set the default format to object
well right after we create the PDO instance we can add a 
attribute to this object 

*Overriding 
we can Override the default by passing the format we want anyway by
passing the FETCH_ASSOC parameter in fetch()

## Prepared Statements

with prepared statements we have 2 main methods
    1. Prepare
    2. Execute

first we are going to look at the unsafe way of doing things
// UNSAFE 
// this is where the input from the form would go
// but this is giving the Opportunity to actually insert SQL instructions 
// right into the query
$sql = "SELECT * FROM demo WHERE author = '$author'";

this is where prepared statements are good for it seperates the 
instructions from the actual data

## Fetching multiple post

when we are using prepared statements we have the 2 ways to do it
we can use:
    1. positional parameters
    2. name paramaters

### positional paramaters
so we are going to write our query 
where the user input/variable is going to be set we are going to place a placeholder our ?

now we need to prepare the statement so in a variable we are going to store this statement 

now we need to execute it 
so we are going to use the execute method on stmt
inside of this method we are going to put an array as the argument 

then we are going to pass the variable that we want to search by 
this variable is going to be what fills the place holder 

*important
with positional parmeters the order is very important 
the order is very sensitive we have to make sure the 
agruments we are providing in the array are in the correct order 

now we are going to create another variable to hold the stmt
since we have more than one result we are going to fetchAll to get all of the records

now we are going to var dump so we can see what exactly is in this post object 
now we can see that it is going to have all of the post in the object 

    *when ever we see stdClass it relates to a object 

now we can loop through this object using a for each 
this returns all of the post that have the author brad

## Named parameters
Now we are going to do the same thing but with named parameters
this is very similiar to positional parameters

with named params instead of using '?' we can use a 
:namedParameter

now in the execute we have to pass the value in a associative array instead of a regular one 

** now if we wanted to do multiple variables 
first we need to update the query conditional to include another variable 
next in the associative array just add another value like we did before 

## Fetch single post 
This is nothing different than what we have been doing earlier 
the only thing that changed was the query, the amount of variables we are passing to the associative array
and instead of using fetchAll() we are going to use fetch because we are grtting 
one record back

## Get row count 

this one is a little simpler
first we need to write the statement 
then we need to execute it 
finally we call the rowCount method and
then echo the results and thats it 

## Inserting data